<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
<div id="app">
  <div class="container pt-5">
    <div class="card border-dark p-5">
      <form class="" v-on:submit.prevent="createComment">
        <div class="mb-3">
          <label for="exampleInputcomment" class="form-label"
            >Leave your comment!</label
          >
          <input
            type="comment"
            class="form-control"
            id="exampleInputcomment"
            aria-describedby="commentHelp"
            v-model="comment"
          />
        </div>

        <button type="submit" class="btn btn-primary">Comment</button>
      </form>
    </div>
    <div v-if="comments" class="px-md-5">
      <div v-for="comment in comments" :key="comment._id">
        <div class="p-1" style="width: 100%">
          <div class="card shadow">
            <div class="card-body card-transition">
              <div class="card-title archivo p-2">Comment</div>
              <div class="archivo px-2">{{ comment.comment }}</div>
              <div class="text-end">
                <span
                  class="fw-bold"
                  style="color: grey; cursor: pointer"
                  @click="likeComments($event,comment._id)"
                  >Like</span
                >üëç{{ comment.likes }}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
  rel="stylesheet"
  integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"
  crossorigin="anonymous"
/>
<script
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-geWF76RCwLtnZ8qwWowPQNguL3RmwHVBC9FhGdlKrxdiJJigb/j/68SIy3Te4Bkz"
  crossorigin="anonymous"
></script>
<script>
  const { createApp, defineAsyncComponent } = Vue;

  createApp({
    mounted() {
      this.getComments();
    },
    data() {
      return { comment: "", comments: [] };
    },
    methods: {
      async createComment() {
        if (this.comment == "") {
          return;
        }
        const createComment = await axios.put("/api/comments/create", {
          commentContent: this.comment,
        });
        console.log(createComment.data);
        this.comment = "";
        this.getComments();
      },
      async getComments() {
        const comments = await axios.get("/api/comments");
        this.comments = comments.data.reverse();
        console.log(comments);
      },
      async likeComments($event, id) {
        const likedComment = await axios.put(`/api/comments/like/${id}`);
        this.getComments();
      },
    },
  }).mount("#app");
</script>
